[{"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\index.js":"1","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\App.js":"2","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\reportWebVitals.js":"3","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Register.js":"5","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Login.js":"6","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\providers\\UserProfileProvider.js":"7","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\InventoryList.js":"8","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Dashboard.js":"9","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\ItemForm.js":"10","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\EditProfile.js":"11","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\ItemCard.js":"12"},{"size":646,"mtime":1612892652908,"results":"13","hashOfConfig":"14"},{"size":429,"mtime":1612891258668,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":1374,"mtime":1612891602372,"results":"17","hashOfConfig":"14"},{"size":13089,"mtime":1613015287431,"results":"18","hashOfConfig":"14"},{"size":3927,"mtime":1612135355380,"results":"19","hashOfConfig":"14"},{"size":3606,"mtime":1612135506061,"results":"20","hashOfConfig":"14"},{"size":13466,"mtime":1613684434536,"results":"21","hashOfConfig":"14"},{"size":20725,"mtime":1613755533808,"results":"22","hashOfConfig":"14"},{"size":34257,"mtime":1613569552141,"results":"23","hashOfConfig":"14"},{"size":6091,"mtime":1612994436364,"results":"24","hashOfConfig":"14"},{"size":3101,"mtime":1613765753434,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"12fai8",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\index.js",[],["54","55"],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\App.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\reportWebVitals.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Register.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Login.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\InventoryList.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Dashboard.js",["56"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Bar, Doughnut, Line, Pie } from 'react-chartjs-2';\r\nimport { Button, Container, FormControl, Nav, Navbar, Row } from 'react-bootstrap'\r\nimport { toast } from \"react-toastify\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./Inventory.css\";\r\n\r\nconst Dashboard = () => {\r\n    const { logout } = useContext(UserProfileContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [quantity, setQuantity] = useState([])\r\n    const [price, setPrice] = useState([])\r\n    const [month, setMonth] = useState([])\r\n    const [quantityYTD, setTotalQuantityYTD] = useState(0)\r\n    const [priceYTD, setTotalPriceYTD] = useState(0)\r\n\r\n    const logoutAndReturn = () => {\r\n        return logout().then(() => {\r\n            toast.dark(\"You are now logged out\");\r\n            history.push(\"/login\");\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/item/quantity\")\r\n            .then((res) => res.json())\r\n            .then((quantity) => {\r\n                setQuantity(quantity)\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/item/price\")\r\n            .then((res) => res.json())\r\n            .then((price) => {\r\n                setPrice(price);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/item/month\")\r\n            .then((res) => res.json())\r\n            .then((month) => {\r\n                setMonth(month);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/item/quantity\")\r\n            .then((res) => res.json())\r\n            .then((quantity) => {\r\n                if (quantityYTD === 0) {\r\n                    console.log(`quantityYTD = ${quantityYTD}`)\r\n                    setQuantity(quantity);\r\n                } else {\r\n                    console.log(`quantityYTD = ${quantityYTD}`)\r\n                    const quantityFloor = quantity.filter(quantity => quantity.totalQuantity >= quantityYTD)\r\n                    setQuantity(quantityFloor);\r\n                }\r\n            });\r\n    }, [quantity, quantityYTD]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/item/price\")\r\n            .then((res) => res.json())\r\n            .then((price) => {\r\n                if (priceYTD === 0) {\r\n                    console.log(`quantityYTD = ${quantityYTD}`)\r\n                    setPrice(price);\r\n                } else {\r\n                    console.log(`quantityYTD = ${quantityYTD}`)\r\n                    const priceFloor = price.filter(price => price.totalPrice >= priceYTD)\r\n                    setPrice(priceFloor);\r\n                }\r\n            });\r\n    }, [quantity, quantityYTD]);\r\n\r\n    //Total # of Items by Department YTD\r\n    const getTotalQuantity = () => {\r\n        return quantity.map(quantity => quantity.totalQuantity)\r\n    };\r\n    const totalQuantityYTD = getTotalQuantity();\r\n\r\n    //Total Expenditure by Department YTD\r\n    const getTotalExpenditure = () => {\r\n        return price.map(price => price.totalPrice.toFixed(2))\r\n    };\r\n    const totalExpenditureYTD = getTotalExpenditure();\r\n\r\n    //Monthly Quantity YTD\r\n    const getMonthlyQuantity = () => {\r\n        return month.map(month => month.monthlyTotalQuantity)\r\n    };\r\n    const monthlyQuantityYTD = getMonthlyQuantity()\r\n\r\n    //Monthly Expenditure YTD\r\n    const getMonthlyExpenditure = () => {\r\n        return month.map(month => month.monthlyTotalPrice.toFixed(2))\r\n    };\r\n    const monthlyExpenditureYTD = getMonthlyExpenditure()\r\n\r\n    let convertedQuantityDepartments = quantity.map(quantity => {\r\n        switch (quantity.departmentId) {\r\n            case 1:\r\n                return \"Administrative Services\";\r\n            case 2:\r\n                return \"Anesthetics\";\r\n            case 3:\r\n                return \"Billing\";\r\n            case 4:\r\n                return \"Cardiology\";\r\n            case 5:\r\n                return \"Dermatology\";\r\n            case 6:\r\n                return \"Ear, Nose, and Throat (ENT)\";\r\n            case 7:\r\n                return \"Emergency Department (ED)\";\r\n            case 8:\r\n                return \"Environmental Services\";\r\n            case 9:\r\n                return \"Gastroenterology\";\r\n            case 10:\r\n                return \"Hematology\";\r\n            case 11:\r\n                return \"Human Resources (HR)\";\r\n            case 12:\r\n                return \"Imaging and Radiology\";\r\n            case 13:\r\n                return \"Information Technology (IT)\";\r\n            case 14:\r\n                return \"Intensive Care Unit (ICU)\";\r\n            case 15:\r\n                return \"Materials Management\";\r\n            case 16:\r\n                return \"Neonatal\";\r\n            case 17:\r\n                return \"Neurology\";\r\n            case 18:\r\n                return \"Nutrition and Dietics\";\r\n            case 19:\r\n                return \"Oncology\";\r\n            case 20:\r\n                return \"Orthopedics\";\r\n            case 21:\r\n                return \"Pharmacy\";\r\n            case 22:\r\n                return \"Physiotherapy\";\r\n            case 23:\r\n                return \"Records and Reception\";\r\n            case 24:\r\n                return \"Surgery\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    })\r\n\r\n    let convertedPriceDepartments = price.map(price => {\r\n        switch (price.departmentId) {\r\n            case 1:\r\n                return \"Administrative Services\";\r\n            case 2:\r\n                return \"Anesthetics\";\r\n            case 3:\r\n                return \"Billing\";\r\n            case 4:\r\n                return \"Cardiology\";\r\n            case 5:\r\n                return \"Dermatology\";\r\n            case 6:\r\n                return \"Ear, Nose, and Throat (ENT)\";\r\n            case 7:\r\n                return \"Emergency Department (ED)\";\r\n            case 8:\r\n                return \"Environmental Services\";\r\n            case 9:\r\n                return \"Gastroenterology\";\r\n            case 10:\r\n                return \"Hematology\";\r\n            case 11:\r\n                return \"Human Resources (HR)\";\r\n            case 12:\r\n                return \"Imaging and Radiology\";\r\n            case 13:\r\n                return \"Information Technology (IT)\";\r\n            case 14:\r\n                return \"Intensive Care Unit (ICU)\";\r\n            case 15:\r\n                return \"Materials Management\";\r\n            case 16:\r\n                return \"Neonatal\";\r\n            case 17:\r\n                return \"Neurology\";\r\n            case 18:\r\n                return \"Nutrition and Dietics\";\r\n            case 19:\r\n                return \"Oncology\";\r\n            case 20:\r\n                return \"Orthopedics\";\r\n            case 21:\r\n                return \"Pharmacy\";\r\n            case 22:\r\n                return \"Physiotherapy\";\r\n            case 23:\r\n                return \"Records and Reception\";\r\n            case 24:\r\n                return \"Surgery\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    })\r\n\r\n    let convertedMonths = month.map(month => {\r\n        switch (month.dateReceived) {\r\n            case 1:\r\n                return \"January\";\r\n            case 2:\r\n                return \"February\";\r\n            case 3:\r\n                return \"March\";\r\n            case 4:\r\n                return \"April\";\r\n            case 5:\r\n                return \"May\";\r\n            case 6:\r\n                return \"June\";\r\n            case 7:\r\n                return \"July\";\r\n            case 8:\r\n                return \"August\";\r\n            case 9:\r\n                return \"September\";\r\n            case 10:\r\n                return \"October\";\r\n            case 11:\r\n                return \"November\";\r\n            case 12:\r\n                return \"December\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <Navbar bg=\"dark\" variant=\"tabs\">\r\n                    <img id=\"nucleusLogo\" src=\"\\Images\\NucleusLogo.png\" alt=\"Nucleus Logo\" />\r\n                    <Button\r\n                        id=\"navLinks\"\r\n                        className=\"mt-1 ml-5\"\r\n                        onClick={() => {\r\n                            history.push(`/`)\r\n                        }}\r\n                        variant=\"outline\"\r\n                    >Inventory</Button>\r\n                    <Nav fixed=\"top\" className=\"mr-auto\"></Nav>\r\n                    <Button\r\n                        id=\"navLinks\"\r\n                        className=\"mt-1 mr-5\"\r\n                        variant=\"outline\"\r\n                        onClick={logoutAndReturn}\r\n                    >Logout\r\n                    </Button>\r\n                </Navbar>\r\n            </Container>\r\n            <Row>\r\n                <div id=\"chartStyling\" style={{ height: 750, width: 900, marginLeft: 30, marginRight: 70 }}>\r\n                    <Row className=\"justify-content-md-left\" style={{ marginTop: -12, marginLeft: 15 }}>\r\n                        <label\r\n                            className=\"quantityFloor text-left mr-n1\"\r\n                            id=\"input\"\r\n                            style={{ width: 700, height: 5, marginTop: 2, fontSize: 18 }}\r\n                        >Quantity Floor <span style={{ fontSize: 17 }}>(enter a number to hide departments with fewer items)</span>:\r\n                        </label>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            className=\"quantityFloorInput mb-4 ml-n5\"\r\n                            id=\"input\"\r\n                            name=\"quantityFloorValue\"\r\n                            onKeyUp={\r\n                                (keyEvent) => {\r\n                                    setTotalQuantityYTD(keyEvent.target.value)\r\n                                }\r\n                            }\r\n                            defaultValue={0}\r\n                            style={{ width: 75, height: 35, fontSize: 18 }}\r\n                        />\r\n                    </Row>\r\n\r\n                    <Doughnut\r\n                        data={{\r\n                            labels: convertedQuantityDepartments,\r\n                            datasets: [{\r\n                                label: [\"Total # of Items by Department YTD\"],\r\n                                data: totalQuantityYTD,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 0, 0, 1)',\r\n                                    'rgba(0, 0, 255, .5)',\r\n                                    'rgba(253, 150, 64, 1)',\r\n                                    'rgba(250, 8, 126, .9)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(136, 8, 255, 1)',\r\n                                    'rgba(123, 224, 0, 1)',\r\n                                    'rgba(80, 150, 75, .5)',\r\n                                    'rgba(40, 75, 150, 1)',\r\n                                    'rgba(200, 150, 150, .6)',\r\n                                    'rgba(80, 100, 50, 1)',\r\n                                    'rgba(248, 255, 8, 1)',\r\n                                    'rgba(153, 102, 6, 1)',\r\n                                    'rgba(138, 177, 150, 1)',\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(0, 255, 0, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(0, 0, 255, 1)',\r\n                                    'rgba(160, 166, 5, .6)',\r\n                                    'rgba(20, 75, 5, .6)',\r\n                                    'rgba(160, 5, 5, 1)',\r\n                                    'rgba(90, 90, 90, .6)',\r\n                                    'rgba(200, 125, 150, 1)',\r\n                                ]\r\n                            }],\r\n                        }}\r\n                        options={{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            title: {\r\n                                display: true,\r\n                                text: \"Total # of Items by Department YTD\",\r\n                                fontColor: 'black',\r\n                                fontSize: '18',\r\n                                padding: '5'\r\n                            },\r\n                            legend: {\r\n                                display: true,\r\n                                position: 'left',\r\n                            }\r\n                        }}\r\n                    ></Doughnut>\r\n                </div>\r\n\r\n                <div id=\"chartStyling\" style={{ height: 750, width: 900 }}>\r\n                    <Row className=\"justify-content-md-left\" style={{ marginTop: -12, marginLeft: 15 }}>\r\n                        <label\r\n                            className=\"priceFloor text-left mr-n1\"\r\n                            id=\"input\"\r\n                            style={{ width: 725, height: 5, marginTop: 2, fontSize: 18 }}\r\n                        >Price Floor <span style={{ fontSize: 17 }}>(enter a number to hide departments with lower expenditures)</span>:\r\n                        </label>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            className=\"priceFloorInput mb-4 ml-n5\"\r\n                            id=\"input\"\r\n                            name=\"quantityFloorValue\"\r\n                            onKeyUp={\r\n                                (keyEvent) => {\r\n                                    setTotalPriceYTD(keyEvent.target.value)\r\n                                }\r\n                            }\r\n                            defaultValue={0}\r\n                            style={{ width: 75, height: 35, fontSize: 18 }}\r\n                        />\r\n                    </Row>\r\n\r\n                    <Pie\r\n                        data={{\r\n                            labels: convertedPriceDepartments,\r\n                            datasets: [{\r\n                                label: 'Expenditure $',\r\n                                data: totalExpenditureYTD,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 0, 0, 1)',\r\n                                    'rgba(0, 0, 255, .5)',\r\n                                    'rgba(253, 150, 64, 1)',\r\n                                    'rgba(250, 8, 126, .9)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(136, 8, 255, 1)',\r\n                                    'rgba(123, 224, 0, 1)',\r\n                                    'rgba(80, 150, 75, .5)',\r\n                                    'rgba(40, 75, 150, 1)',\r\n                                    'rgba(200, 150, 150, .6)',\r\n                                    'rgba(80, 100, 50, 1)',\r\n                                    'rgba(248, 255, 8, 1)',\r\n                                    'rgba(153, 102, 6, 1)',\r\n                                    'rgba(138, 177, 150, 1)',\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(0, 255, 0, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(0, 0, 255, 1)',\r\n                                    'rgba(160, 166, 5, .6)',\r\n                                    'rgba(20, 75, 5, .6)',\r\n                                    'rgba(160, 5, 5, 1)',\r\n                                    'rgba(90, 90, 90, .6)',\r\n                                    'rgba(200, 125, 150, 1)',\r\n                                ]\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            title: {\r\n                                display: true,\r\n                                text: \"Total Expenditure by Department YTD\",\r\n                                fontColor: 'black',\r\n                                fontSize: '18'\r\n                            },\r\n                            legend: {\r\n                                display: true,\r\n                                position: 'left',\r\n                            }\r\n                        }}\r\n                    ></Pie>\r\n                </div>\r\n            </Row>\r\n\r\n            <Row style={{ marginTop: 25, marginBottom: 75 }}>\r\n                <div id=\"chartStyling\" style={{ height: 600, width: 900, marginLeft: 30, marginRight: 70 }}>\r\n                    <Bar\r\n                        data={{\r\n                            labels: convertedMonths,\r\n                            datasets: [{\r\n                                label: '# of Items',\r\n                                data: monthlyQuantityYTD,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 0, 0, 1)',\r\n                                    'rgba(0, 0, 255, .5)',\r\n                                    'rgba(253, 150, 64, 1)',\r\n                                    'rgba(250, 8, 126, .9)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(136, 8, 255, 1)',\r\n                                    'rgba(123, 224, 0, 1)',\r\n                                    'rgba(80, 150, 75, .5)',\r\n                                    'rgba(40, 75, 150, 1)',\r\n                                    'rgba(200, 150, 150, .6)',\r\n                                    'rgba(80, 100, 50, 1)',\r\n                                    'rgba(248, 255, 8, 1)',\r\n                                    'rgba(153, 102, 6, 1)',\r\n                                    'rgba(138, 177, 150, 1)',\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(0, 255, 0, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(0, 0, 255, 1)',\r\n                                    'rgba(160, 166, 5, .6)',\r\n                                    'rgba(20, 75, 5, .6)',\r\n                                    'rgba(160, 5, 5, 1)',\r\n                                    'rgba(90, 90, 90, .6)',\r\n                                    'rgba(200, 125, 150, 1)',\r\n                                ]\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            title: {\r\n                                display: true,\r\n                                text: 'Total Hospital Inventory by Month',\r\n                                fontColor: 'black',\r\n                                fontSize: '18',\r\n                                padding: '5'\r\n                            },\r\n                            legend: {\r\n                                display: false\r\n                            }\r\n                        }}\r\n                    ></Bar>\r\n                </div>\r\n\r\n                <div id=\"chartStyling\" style={{ height: 600, width: 900 }}>\r\n                    <Line\r\n                        data={{\r\n                            labels: convertedMonths,\r\n                            datasets: [{\r\n                                label: 'Expenditure $',\r\n                                data: monthlyExpenditureYTD,\r\n                                backgroundColor: [\r\n                                    'rgba(54, 162, 235, .7)',\r\n                                ]\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            title: {\r\n                                display: true,\r\n                                text: 'Total Hospital Expenditure by Month',\r\n                                fontColor: 'black',\r\n                                fontSize: '18',\r\n                                padding: '5'\r\n                            },\r\n                            legend: {\r\n                                display: false\r\n                            }\r\n                        }}\r\n                    ></Line>\r\n                </div>\r\n            </Row>\r\n            <Row></Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\ItemForm.js",["57","58","59","60","61"],"import React, { useContext, useEffect, useRef, useState } from \"react\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { Button, Col, Form, Dropdown, DropdownButton, Row } from \"react-bootstrap\"\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Inventory.css\";\r\n\r\nconst ItemForm = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { getToken } = useContext(UserProfileContext);\r\n\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const [value, setValue] = useState('');\r\n    const [ItemPicture, setImage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [DepartmentId, setItemLocation] = useState(0);\r\n    const [vendorName, setvendorName] = useState('');\r\n    const [itemName, setItemName] = useState('');\r\n    const [itemSKU, setItemSKU] = useState('');\r\n    const [UnitPrice, setItemUnitPrice] = useState(0);\r\n    const [Quantity, setItemQuantity] = useState(0);\r\n    const [editCheck, setEditCheck] = useState(0)\r\n    const [oldUnitPrice, setOldUnitPrice] = useState(0)\r\n    const [currentItem, setCurrentItem] = useState({ department: { name: \"\" } });\r\n\r\n    const { itemId } = useParams();\r\n\r\n    const vendorNameEdit = useRef();\r\n    const itemNameEdit = useRef();\r\n    const itemSKUEdit = useRef();\r\n    const unitPriceEdit = useRef();\r\n    const quantityEdit = useRef();\r\n    const unitPriceAdd = useRef();\r\n\r\n    useEffect(() => {\r\n        if (itemId !== undefined) {\r\n            fetch(`/api/item/${itemId}`)\r\n                .then((res) => res.json())\r\n                .then((item) => {\r\n                    setCurrentItem(item);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (editCheck !== 0) {\r\n            if (editCheck !== 0 && editCheck !== -1) {\r\n                editUniqueItem(editCheck);\r\n            }\r\n            else {\r\n                if (DepartmentId === 0) {\r\n                    return\r\n                } else if (vendorName === \"\") {\r\n                    return\r\n                } else if (itemName === \"\") {\r\n                    return\r\n                } else if (itemSKU === \"\") {\r\n                    return\r\n                } else if (UnitPrice === 0 || UnitPrice === NaN) {\r\n                    return\r\n                } else if (Quantity === 0 || Quantity === NaN) {\r\n                    return\r\n                } else {\r\n                    const item = {\r\n                        ItemPicture: ItemPicture ? ItemPicture : \"https://res.cloudinary.com/dstfvbrwf/image/upload/v1612906044/ToolMeOnce/qcr8iyezvaocm9z8yj6o.gif\",\r\n                        DepartmentId,\r\n                        vendorName,\r\n                        itemName,\r\n                        itemSKU,\r\n                        UnitPrice: UnitPrice.toFixed(2),\r\n                        TotalPrice: (UnitPrice * Quantity).toFixed(2),\r\n                        Quantity\r\n                    };\r\n                    getToken().then((token) => {\r\n                        fetch(\"/api/item/additem\", {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                Authorization: `Bearer ${token}`,\r\n                                \"Content-Type\": \"application/json\",\r\n                            },\r\n                            body: JSON.stringify(item),\r\n                        }).then(() => {\r\n                            setEditCheck(0)\r\n                            history.push(`/`);\r\n                        })\r\n                    }\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }, [DepartmentId, editCheck, getToken, history, itemName, ItemPicture, itemSKU, Quantity, UnitPrice]);\r\n\r\n    const uploadImage = async e => {\r\n        const files = e.target.files\r\n        const data = new FormData()\r\n        data.append('file', files[0])\r\n        data.append('upload_preset', 'ToolMeOnce')\r\n        setLoading(true)\r\n        const res = await fetch(\r\n            'https://api.cloudinary.com/v1_1/dstfvbrwf/image/upload',\r\n            {\r\n                method: 'POST',\r\n                body: data\r\n            }\r\n        )\r\n        const file = await res.json()\r\n        setImage(file.secure_url)\r\n        setLoading(false)\r\n    }\r\n\r\n    const getItems = () => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/item`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((res) => {\r\n                    return res\r\n                })\r\n                .then((items) => {\r\n                    let itemCheck = 0\r\n                    items.map(item => {\r\n                        if (itemSKU === item.itemSKU && DepartmentId === item.departmentId && vendorName === item.vendorName) {\r\n                            let total = Quantity + item.quantity\r\n                            setItemQuantity(total)\r\n                            setOldUnitPrice(item.unitPrice)\r\n                            itemCheck = item.id\r\n                        }\r\n                    })\r\n                    if (itemCheck !== 0) {\r\n                        setEditCheck(itemCheck)\r\n                    } else {\r\n                        setEditCheck(-1)\r\n                    }\r\n                })\r\n        );\r\n    };\r\n\r\n    //adding item with previous entries\r\n    const editUniqueItem = (id) => {\r\n        const item = {\r\n            Id: id,\r\n            ItemPicture: ItemPicture ? ItemPicture : \"https://res.cloudinary.com/dstfvbrwf/image/upload/v1612906044/ToolMeOnce/qcr8iyezvaocm9z8yj6o.gif\",\r\n            DepartmentId,\r\n            vendorName,\r\n            itemName,\r\n            itemSKU,\r\n            UnitPrice: (UnitPrice + oldUnitPrice) / 2,\r\n            TotalPrice: UnitPrice * Quantity,\r\n            Quantity\r\n        };\r\n        getToken().then((token) =>\r\n            fetch(`/api/item/edititem/${id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(item),\r\n            }).then(() => {\r\n                history.push(`/`);\r\n            })\r\n        );\r\n    };\r\n\r\n    //actual edit item\r\n    const editItem = () => {\r\n        const item = {\r\n            Id: itemId,\r\n            ItemPicture: ItemPicture ? ItemPicture : currentItem.itemPicture,\r\n            DepartmentId: DepartmentId ? DepartmentId : currentItem.departmentId,\r\n            vendorName: vendorNameEdit.current.value,\r\n            itemName: itemNameEdit.current.value,\r\n            itemSKU: itemSKUEdit.current.value,\r\n            UnitPrice: unitPriceEdit.current.value,\r\n            TotalPrice: unitPriceEdit.current.value * quantityEdit.current.value,\r\n            Quantity: quantityEdit.current.value,\r\n        };\r\n        getToken().then((token) =>\r\n            fetch(`/api/item/edititem/${itemId}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(item),\r\n            }).then(() => {\r\n                history.push(`/`);\r\n            })\r\n        );\r\n    };\r\n\r\n    const handleClick = event => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n\r\n    const handleSelect = (e) => {\r\n        setValue(e)\r\n    }\r\n\r\n    if (itemId) {\r\n        return (\r\n            <>\r\n                <h1 className=\"AddItemHeader my-5\">Edit Item</h1>\r\n                <hr />\r\n                <Row>\r\n                    <Col>\r\n                        <Row style={{ height: 50 }}></Row>\r\n                        <Row className=\"justify-content-md-left\" style={{ marginTop: -15, marginLeft: 300 }}>\r\n                            <div className=\"NewToolPicture\">\r\n                                {loading ? (\r\n                                    <h3 className=\"NewToolPictureLoading\">Loading . . .</h3>\r\n                                ) : (\r\n                                        <img alt=\"Logo\" src={ItemPicture ? ItemPicture : currentItem.itemPicture} style={{ width: 400, height: 300 }} />\r\n                                    )\r\n                                }\r\n                                <h1 className=\"UploadTitle my-5\">Upload Image</h1>\r\n                                <Button id=\"imageUploadButton\" onClick={handleClick}>Upload a file\r\n                                </Button>\r\n                                <input\r\n                                    defaultValue={ItemPicture}\r\n                                    name=\"file\"\r\n                                    onChange={uploadImage}\r\n                                    placeholder=\"Upload an image\"\r\n                                    style={{ display: 'none' }}\r\n                                    type=\"file\"\r\n                                    ref={hiddenFileInput}\r\n                                />\r\n                            </div>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col id=\"textInputs\" className=\"ml-5\">\r\n                        <p id=\"required\" className=\"mb-4\"><i>* Required</i></p>\r\n                        <Row style={{ marginTop: -15 }} className=\"justify-content-md-left mb-4 text-left\">\r\n                            <label\r\n                                className=\"LocationTitle\"\r\n                                id=\"input\"\r\n                                style={{ width: 200, height: 5 }}\r\n                            >Item Location\r\n                            </label>\r\n                            <Form inline>\r\n                                <DropdownButton\r\n                                    id=\"itemFormDropdown\"\r\n                                    style={{ width: 400, height: 35 }}\r\n                                    title={value ? value : currentItem.department.name}\r\n                                    onSelect={handleSelect}\r\n                                    defaultValue={currentItem.departmentId}\r\n                                >\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(1)} eventKey=\"Administrative Services\">Administrative Services</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(2)} eventKey=\"Anesthetics\">Anesthetics</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(3)} eventKey=\"Billing\">Billing</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(4)} eventKey=\"Cardiology\">Cardiology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(5)} eventKey=\"Dermatology\">Dermatology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(6)} eventKey=\"Ear, Nose, and Throat (ENT)\">Ear, Nose, and Throat (ENT)</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(7)} eventKey=\"Emergency Department (ED)\">Emergency Department (ED)</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(8)} eventKey=\"Environmental Services\">Environmental Services</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(9)} eventKey=\"Gastroenterology\">Gastroenterology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(10)} eventKey=\"Hematology\">Hematology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(11)} eventKey=\"Human Resources (HR)\">Human Resources (HR)</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(12)} eventKey=\"Imaging and Radiology\">Imaging and Radiology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(13)} eventKey=\"Information Technology (IT)\">Information Technology (IT)</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(14)} eventKey=\"Intensive Care Unit (ICU)\">Intensive Care Unit (ICU)</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(15)} eventKey=\"Materials Management\">Materials Management</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(16)} eventKey=\"Neonatal\">Neonatal</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(17)} eventKey=\"Neurology\">Neurology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(18)} eventKey=\"Nutrition and Dietics\">Nutrition and Dietics</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(19)} eventKey=\"Oncology\">Oncology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(20)} eventKey=\"Orthopedics\">Orthopedics</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(21)} eventKey=\"Pharmacy\">Pharmacy</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(22)} eventKey=\"Physiotherapy\">Physiotherapy</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(23)} eventKey=\"Records and Reception\">Records and Reception</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(24)} eventKey=\"Surgery\">Surgery</Dropdown.Item>\r\n                                </DropdownButton>\r\n                            </Form>\r\n                        </Row>\r\n\r\n                        <p className=\"mb-4\" id=\"required\" ><i>* Required</i></p>\r\n                        <Row className=\"justify-content-md-left\" style={{ marginTop: -15 }}>\r\n                            <label\r\n                                className=\"vendorNameTitle text-left\"\r\n                                id=\"input\"\r\n                                style={{ width: 200, height: 5 }}\r\n                            >Vendor Name:\r\n                                </label>\r\n                            <input\r\n                                className=\"vendorNameInput mb-4 ml-4\"\r\n                                defaultValue={itemId ? currentItem.vendorName : \"\"}\r\n                                id=\"input\"\r\n                                name=\"vendorName\"\r\n                                ref={vendorNameEdit}\r\n                                style={{ width: 400, height: 35 }}\r\n                            />\r\n                        </Row>\r\n\r\n                        <p className=\"mb-4\" id=\"required\"><i>* Required</i></p>\r\n                        <Row className=\"justify-content-md-left\" style={{ marginTop: -15 }}>\r\n                            <label\r\n                                className=\"itemNameTitle text-left\"\r\n                                id=\"input\"\r\n                                style={{ width: 200, height: 5 }}\r\n                            >Item Name:\r\n                                </label>\r\n                            <input\r\n                                className=\"itemNameInput mb-4 ml-4\"\r\n                                defaultValue={itemId ? currentItem.itemName : \"\"}\r\n                                id=\"input\"\r\n                                name=\"itemName\"\r\n                                ref={itemNameEdit}\r\n                                style={{ width: 400, height: 35 }}\r\n                            />\r\n                        </Row>\r\n\r\n                        <p id=\"required\" className=\"mb-4\"><i>* Required</i></p>\r\n                        <Row style={{ marginTop: -15 }} className=\"justify-content-md-left\">\r\n                            <label\r\n                                className=\"itemSKUTitle text-left\"\r\n                                id=\"input\"\r\n                                style={{ width: 200, height: 5 }}\r\n                            >Item SKU:\r\n                            </label>\r\n                            <input\r\n                                className=\"itemSKUInput mb-4 ml-4\"\r\n                                defaultValue={itemId ? currentItem.itemSKU : \"\"}\r\n                                id=\"input\"\r\n                                name=\"itemSKU\"\r\n                                ref={itemSKUEdit}\r\n                                style={{ width: 400, height: 35 }}\r\n                            />\r\n                        </Row>\r\n\r\n                        <p id=\"required\" className=\"mb-4\"><i>* Required</i></p>\r\n                        <Row className=\"justify-content-md-left\" style={{ marginTop: -15 }}>\r\n                            <label\r\n                                className=\"ItemUnitPrice text-left\"\r\n                                id=\"input\"\r\n                                style={{ width: 197, height: 5 }}\r\n                            >Unit Price:\r\n                            </label>\r\n\r\n                            <input\r\n                                className=\"itemUnitPrice mb-4 ml-4\"\r\n                                defaultValue={itemId ? currentItem.unitPrice : \"\"}\r\n                                id=\"input\"\r\n                                name=\"itemUnitPrice\"\r\n                                ref={unitPriceEdit}\r\n                                style={{ width: 400, height: 35 }}\r\n                            />\r\n                        </Row>\r\n\r\n                        <p className=\"mb-4\" id=\"required\"><i>* Required</i></p>\r\n                        <Row className=\"justify-content-md-left text-left\" style={{ marginTop: -15 }}>\r\n                            <label\r\n                                className=\"itemQuantity\"\r\n                                id=\"input\"\r\n                                style={{ width: 197, height: 5 }}\r\n                            >Quantity:\r\n                            </label>\r\n                            <input\r\n                                className=\"itemQuantityInput mb-4 ml-4\"\r\n                                defaultValue={itemId ? currentItem.quantity : \"\"}\r\n                                id=\"input\"\r\n                                name=\"itemQuantity\"\r\n                                ref={quantityEdit}\r\n                                style={{ width: 400 }}\r\n                            />\r\n                        </Row>\r\n\r\n                        <Row className=\"justify-content-md-left\" style={{ marginTop: 20 }}>\r\n                            <Button\r\n                                id=\"input\"\r\n                                onClick={item => {\r\n                                    item.preventDefault()\r\n                                    editItem()\r\n                                    getItems()\r\n                                }}\r\n                                style={{ width: 150, marginLeft: 75 }}\r\n                                type=\"submit\"\r\n                                variant=\"success\"\r\n                            >Save Item\r\n                            </Button>\r\n\r\n                            <Button\r\n                                id=\"input\"\r\n                                onClick={() => {\r\n                                    history.push(`/`)\r\n                                }}\r\n                                style={{ width: 150, marginLeft: 150 }}\r\n                                type=\"submit\"\r\n                                variant=\"danger\"\r\n                            >Cancel\r\n                            </Button>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n                <h1 className=\"AddItemHeader my-5\">Add Item</h1>\r\n                <hr />\r\n                <Row>\r\n                    <Col>\r\n                        <Row style={{ height: 50 }}></Row>\r\n                        <Row className=\"justify-content-md-left\" style={{ marginTop: -15, marginLeft: 300 }}>\r\n                            <div className=\"NewToolPicture\">\r\n                                {loading ? (\r\n                                    <h3 className=\"NewToolPictureLoading\">Loading . . .</h3>\r\n                                ) : (\r\n                                        ItemPicture === \"\" ?\r\n                                            <img alt=\"Logo\" src=\"https://res.cloudinary.com/dstfvbrwf/image/upload/v1612906044/ToolMeOnce/qcr8iyezvaocm9z8yj6o.gif\" style={{ width: 400, height: 300 }} />\r\n                                            :\r\n                                            <img\r\n                                                alt=\"Preview\"\r\n                                                className=\"imageUploadBoard\"\r\n                                                src={ItemPicture ? ItemPicture : \"https://res.cloudinary.com/dstfvbrwf/image/upload/v1612906044/ToolMeOnce/qcr8iyezvaocm9z8yj6o.gif\"}\r\n                                                style={{ width: 500, height: 400 }}\r\n                                            />\r\n                                    )\r\n                                }\r\n                                <h1 className=\"UploadTitle my-5\">Upload Image</h1>\r\n                                <Button id=\"imageUploadButton\" onClick={handleClick}>Upload a file\r\n                                </Button>\r\n                                <input\r\n                                    name=\"file\"\r\n                                    onChange={uploadImage}\r\n                                    placeholder=\"Upload an image\"\r\n                                    ref={hiddenFileInput}\r\n                                    style={{ display: 'none' }}\r\n                                    type=\"file\"\r\n                                />\r\n                            </div>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col id=\"textInputs\" className=\"ml-5\">\r\n                        <p id=\"required\" className=\"mb-4\"><i>* Required</i></p>\r\n                        <Row style={{ marginTop: -15 }} className=\"justify-content-md-left mb-4 text-left\">\r\n                            <label\r\n                                className=\"LocationTitle\"\r\n                                id=\"input\"\r\n                                style={{ width: 200, height: 5 }}\r\n                            >Item Location\r\n                            </label>\r\n                            <Form inline>\r\n                                <DropdownButton\r\n                                    id=\"itemFormDropdown\"\r\n                                    style={{ width: 400, height: 35 }}\r\n                                    title={value ? value : \"Select Location\"}\r\n                                    onSelect={handleSelect}\r\n                                >\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(1)} eventKey=\"Administrative Services\">Administrative Services</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(2)} eventKey=\"Anesthetics\">Anesthetics</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(3)} eventKey=\"Billing\">Billing</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(4)} eventKey=\"Cardiology\">Cardiology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(5)} eventKey=\"Dermatology\">Dermatology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(6)} eventKey=\"Ear, Nose, and Throat (ENT)\">Ear, Nose, and Throat (ENT)</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(7)} eventKey=\"Emergency Department (ED)\">Emergency Department (ED)</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(8)} eventKey=\"Environmental Services\">Environmental Services</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(9)} eventKey=\"Gastroenterology\">Gastroenterology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(10)} eventKey=\"Hematology\">Hematology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(11)} eventKey=\"Human Resources (HR)\">Human Resources (HR)</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(12)} eventKey=\"Imaging and Radiology\">Imaging and Radiology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(13)} eventKey=\"Information Technology (IT)\">Information Technology (IT)</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(14)} eventKey=\"Intensive Care Unit (ICU)\">Intensive Care Unit (ICU)</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(15)} eventKey=\"Materials Management\">Materials Management</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(16)} eventKey=\"Neonatal\">Neonatal</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(17)} eventKey=\"Neurology\">Neurology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(18)} eventKey=\"Nutrition and Dietics\">Nutrition and Dietics</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(19)} eventKey=\"Oncology\">Oncology</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(20)} eventKey=\"Orthopedics\">Orthopedics</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(21)} eventKey=\"Pharmacy\">Pharmacy</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(22)} eventKey=\"Physiotherapy\">Physiotherapy</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(23)} eventKey=\"Records and Reception\">Records and Reception</Dropdown.Item>\r\n                                    <Dropdown.Item id=\"dropdownOptions\" onSelect={() => setItemLocation(24)} eventKey=\"Surgery\">Surgery</Dropdown.Item>\r\n                                </DropdownButton>\r\n                            </Form>\r\n                        </Row>\r\n                        <Form>\r\n                            <p className=\"mb-4\" id=\"required\" ><i>* Required</i></p>\r\n                            <Row className=\"justify-content-md-left\" style={{ marginTop: -15 }}>\r\n                                <label\r\n                                    className=\"vendorNameTitle text-left\"\r\n                                    id=\"input\"\r\n                                    style={{ width: 200, height: 5 }}\r\n                                >Vendor Name:\r\n                            </label>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        className=\"vendorNameInput mb-4 ml-4\"\r\n                                        id=\"input\"\r\n                                        name=\"vendorName\"\r\n                                        onChange={(e) => setvendorName(e.target.value)}\r\n                                        required=\"required\"\r\n                                        style={{ width: 400, height: 35 }}\r\n                                        type=\"Vendor Name\"\r\n                                    />\r\n                                </div>\r\n                            </Row>\r\n                        </Form>\r\n                        <p className=\"mb-4\" id=\"required\"><i>* Required</i></p>\r\n                        <Row className=\"justify-content-md-left\" style={{ marginTop: -15 }}>\r\n                            <label\r\n                                className=\"itemNameTitle text-left\"\r\n                                id=\"input\"\r\n                                style={{ width: 200, height: 5 }}\r\n                            >Item Name:\r\n                            </label>\r\n                            <input\r\n                                className=\"itemNameInput mb-4 ml-4\"\r\n                                id=\"input\"\r\n                                name=\"itemName\"\r\n                                onChange={(e) => setItemName(e.target.value)}\r\n                                required=\"required\"\r\n                                style={{ width: 400, height: 35 }}\r\n                                type=\"Item Name\"\r\n                            />\r\n                        </Row>\r\n\r\n                        <p id=\"required\" className=\"mb-4\"><i>* Required</i></p>\r\n                        <Row style={{ marginTop: -15 }} className=\"justify-content-md-left\">\r\n                            <label\r\n                                className=\"itemSKUTitle text-left\"\r\n                                id=\"input\"\r\n                                style={{ width: 200, height: 5 }}\r\n                            >Item SKU:\r\n                            </label>\r\n                            <input\r\n                                className=\"itemSKUInput mb-4 ml-4\"\r\n                                id=\"input\"\r\n                                name=\"itemSKU\"\r\n                                onChange={(e) => setItemSKU(e.target.value)}\r\n                                required=\"required\"\r\n                                style={{ width: 400, height: 35 }}\r\n                                type=\"Item SKU\"\r\n                            />\r\n                        </Row>\r\n\r\n                        <p id=\"required\" className=\"mb-4\"><i>* Required</i></p>\r\n                        <Row className=\"justify-content-md-left\" style={{ marginTop: -15 }}>\r\n                            <label\r\n                                className=\"ItemUnitPrice text-left\"\r\n                                id=\"input\"\r\n                                style={{ width: 197, height: 5 }}\r\n                            >Unit Price:\r\n                            </label>\r\n\r\n                            <input\r\n                                className=\"itemUnitPrice mb-4 ml-4\"\r\n                                id=\"input\"\r\n                                name=\"itemUnitPrice\"\r\n                                onChange={(e) => setItemUnitPrice(parseFloat(e.target.value))}\r\n                                required=\"required\"\r\n                                style={{ width: 400, height: 35 }}\r\n                                type=\"Unit Price\"\r\n                                ref={unitPriceAdd}\r\n                            />\r\n                        </Row>\r\n\r\n                        <p className=\"mb-4\" id=\"required\"><i>* Required</i></p>\r\n                        <Row className=\"justify-content-md-left text-left\" style={{ marginTop: -15 }}>\r\n                            <label\r\n                                className=\"itemQuantity\"\r\n                                id=\"input\"\r\n                                style={{ width: 197, height: 5 }}\r\n                            >Quantity:\r\n                            </label>\r\n\r\n                            <input\r\n                                className=\"itemQuantityInput mb-4 ml-4\"\r\n                                id=\"input\"\r\n                                name=\"itemQuantity\"\r\n                                onChange={(e) => setItemQuantity(parseInt(e.target.value))}\r\n                                required=\"required\"\r\n                                style={{ width: 400 }}\r\n                                type=\"Quantity\"\r\n                            />\r\n                        </Row>\r\n\r\n                        <Row className=\"justify-content-md-left\" style={{ marginTop: 20 }}>\r\n                            <Button\r\n                                id=\"input\"\r\n                                onClick={item => {\r\n                                    item.preventDefault()\r\n                                    getItems()\r\n                                }}\r\n                                style={{ width: 150, marginLeft: 75 }}\r\n                                type=\"submit\"\r\n                                variant=\"success\"\r\n                            >Save Item\r\n                            </Button>\r\n\r\n                            <Button\r\n                                id=\"input\"\r\n                                onClick={() => {\r\n                                    history.push(`/`)\r\n                                }}\r\n                                style={{ width: 150, marginLeft: 150 }}\r\n                                type=\"submit\"\r\n                                variant=\"danger\"\r\n                            >Cancel\r\n                            </Button>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemForm;","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\EditProfile.js",["62"],"import React, { useContext, useEffect, useRef, useState } from \"react\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { Button, Col, Row } from \"react-bootstrap\"\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./Inventory.css\";\r\n\r\nconst EditProfile = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { getToken } = useContext(UserProfileContext);\r\n\r\n    const { id } = useParams();\r\n\r\n    const firstName = useRef();\r\n    const lastName = useRef();\r\n    const displayName = useRef();\r\n\r\n    const [user, setUser] = useState({});\r\n\r\n    const editProfile = () => {\r\n        const newUserProfile = {\r\n            id: user.id,\r\n            FirebaseUserId: user.firebaseUserId,\r\n            department: user.department,\r\n            firstName: firstName.current.value,\r\n            lastName: lastName.current.value,\r\n            displayName: displayName.current.value,\r\n            email: user.email,\r\n            dateRegistered: user.dateRegistered,\r\n            userTypeId: user.userTypeId,\r\n            IsActive: true\r\n        };\r\n        getToken().then((token) =>\r\n            fetch(`/api/userprofile/editprofile/${user.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(newUserProfile),\r\n            }).then(() => {\r\n                history.push(`/`);\r\n            })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/userprofile/editprofile/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((user) => {\r\n                setUser(user);\r\n            })\r\n    }, [id]);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"my-5\">Edit Profile</h1>\r\n            <hr />\r\n            <Row>\r\n                <Col></Col>\r\n                <Col className=\"ml-5\" id=\"textInputs\">\r\n                    <p id=\"requiredProfile\" className=\"mb-1\"><i>* Required</i></p>\r\n                    <Row className=\"justify-content-md-left mb-4 mt-1\" >\r\n                        <label\r\n                            className=\"firstNameTitle text-left\"\r\n                            id=\"input\"\r\n                            style={{ height: 5, width: 200 }}\r\n                        >First Name:\r\n                        </label>\r\n                        <input\r\n                            className=\"firstNameInput ml-4\"\r\n                            defaultValue={user.firstName}\r\n                            id=\"input\"\r\n                            name=\"firstName\"\r\n                            ref={firstName}\r\n                            style={{ height: 35, width: 400 }}\r\n                            type=\"text\"\r\n                        />\r\n                    </Row>\r\n\r\n                    <p id=\"requiredProfile\" className=\"mb-1\"><i>* Required</i></p>\r\n                    <Row className=\"justify-content-md-left mb-4 mt-1\" >\r\n                        <label\r\n                            className=\"lastNameTitle text-left\"\r\n                            id=\"input\"\r\n                            style={{ height: 5, width: 200 }}\r\n                        >Last Name:\r\n                        </label>\r\n                        <input\r\n                            className=\"lastNameInput ml-4\"\r\n                            defaultValue={user.lastName}\r\n                            id=\"input\"\r\n                            name=\"lastName\"\r\n                            ref={lastName}\r\n                            style={{ height: 35, width: 400 }}\r\n                            type=\"text\"\r\n                        />\r\n                    </Row>\r\n\r\n                    <p id=\"requiredProfile\" className=\"mb-1\"><i>* Required</i></p>\r\n                    <Row className=\"justify-content-md-left mb-4 mt-1\">\r\n                        <label\r\n                            className=\"displayName text-left\"\r\n                            id=\"input\"\r\n                            style={{ height: 5, width: 200 }}\r\n                        >Display Name:\r\n                        </label>\r\n                        <input\r\n                            className=\"displayName ml-4\"\r\n                            defaultValue={user.displayName}\r\n                            id=\"input\"\r\n                            name=\"displayName\"\r\n                            ref={displayName}\r\n                            style={{ height: 35, width: 400 }}\r\n                            type=\"text\"\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-md-left mb-4\" style={{ marginTop: 20 }}>\r\n                        <Button\r\n                            id=\"input\"\r\n                            onClick={item => {\r\n                                item.preventDefault()\r\n                                editProfile();\r\n                                history.push(`/`)\r\n                            }}\r\n                            style={{ marginLeft: 75, width: 150 }}\r\n                            type=\"button\"\r\n                            variant=\"success\"\r\n                        >Save Edits\r\n                        </Button>\r\n\r\n                        <Button\r\n                            id=\"input\"\r\n                            onClick={() => {\r\n                                history.push(`/`)\r\n                            }}\r\n                            style={{ marginLeft: 150, width: 150 }}\r\n                            type=\"submit\"\r\n                            variant=\"danger\"\r\n                        >Cancel\r\n                        </Button>\r\n                    </Row>\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditProfile;","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\ItemCard.js",["63","64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":80,"column":8,"nodeType":"72","endLine":80,"endColumn":31,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":45,"column":8,"nodeType":"72","endLine":45,"endColumn":10,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":61,"column":47,"nodeType":"78","messageId":"79","endLine":61,"endColumn":64},{"ruleId":"76","severity":1,"message":"77","line":63,"column":46,"nodeType":"78","messageId":"79","endLine":63,"endColumn":62},{"ruleId":"70","severity":1,"message":"80","line":93,"column":8,"nodeType":"72","endLine":93,"endColumn":105,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":127,"column":36,"nodeType":"84","messageId":"85","endLine":127,"endColumn":38},{"ruleId":"70","severity":1,"message":"86","line":63,"column":8,"nodeType":"72","endLine":63,"endColumn":12,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":25},{"ruleId":"92","severity":1,"message":"93","line":35,"column":21,"nodeType":"94","endLine":35,"endColumn":64},{"ruleId":"95","severity":1,"message":"96","line":36,"column":25,"nodeType":"94","endLine":36,"endColumn":116},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'priceYTD'. Either include it or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has a missing dependency: 'itemId'. Either include it or remove the dependency array.",["100"],"use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","React Hook useEffect has missing dependencies: 'editUniqueItem' and 'vendorName'. Either include them or remove the dependency array.",["101"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["102"],"no-unused-vars","'ReactImageMagnify' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [priceYTD, quantity, quantityYTD]",{"range":"111","text":"112"},"Update the dependencies array to be: [itemId]",{"range":"113","text":"114"},"Update the dependencies array to be: [DepartmentId, editCheck, getToken, history, itemName, ItemPicture, itemSKU, Quantity, UnitPrice, editUniqueItem, vendorName]",{"range":"115","text":"116"},"Update the dependencies array to be: [getToken, id]",{"range":"117","text":"118"},[2754,2777],"[priceYTD, quantity, quantityYTD]",[1669,1671],"[itemId]",[3591,3688],"[DepartmentId, editCheck, getToken, history, itemName, ItemPicture, itemSKU, Quantity, UnitPrice, editUniqueItem, vendorName]",[2038,2042],"[getToken, id]"]