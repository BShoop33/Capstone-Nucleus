[{"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\index.js":"1","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\App.js":"2","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\reportWebVitals.js":"3","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Register.js":"5","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Login.js":"6","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\providers\\UserProfileProvider.js":"7","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\InventoryList.js":"8","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\ItemSearch.js":"9","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Dashboard.js":"10","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\ItemForm.js":"11","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\EditProfile.js":"12","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\ItemCard.js":"13"},{"size":646,"mtime":1612135562659,"results":"14","hashOfConfig":"15"},{"size":591,"mtime":1612135536852,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1462,"mtime":1612135834480,"results":"18","hashOfConfig":"15"},{"size":7845,"mtime":1612135338136,"results":"19","hashOfConfig":"15"},{"size":3927,"mtime":1612135355380,"results":"20","hashOfConfig":"15"},{"size":3606,"mtime":1612135506061,"results":"21","hashOfConfig":"15"},{"size":9502,"mtime":1612203518170,"results":"22","hashOfConfig":"15"},{"size":665,"mtime":1612152351647,"results":"23","hashOfConfig":"15"},{"size":1868,"mtime":1612119423335,"results":"24","hashOfConfig":"15"},{"size":17689,"mtime":1612206008778,"results":"25","hashOfConfig":"15"},{"size":8972,"mtime":1612152860521,"results":"26","hashOfConfig":"15"},{"size":1878,"mtime":1612205687530,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"12fai8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\index.js",[],["59","60"],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\App.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\reportWebVitals.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Register.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Login.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\InventoryList.js",["61","62","63","64","65","66","67","68"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport { toast } from \"react-toastify\";\r\nimport { ItemSearch } from \"./ItemSearch\";\r\nimport ItemCard from \"./ItemCard\";\r\nimport { Button, Col, Container, Dropdown, DropdownButton, Form, Nav, Navbar, Row } from 'react-bootstrap';\r\n// import { ItemCard } from \"./ItemCard\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./Inventory.css\";\r\n\r\nconst InventoryList = () => {\r\n\r\n    const history = useHistory();\r\n    const [items, setItems] = useState([])\r\n    const [filteredItems, setFiltered] = useState([])\r\n    const [value, setValue] = useState('');\r\n\r\n    const { logout } = useContext(UserProfileContext);\r\n    const logoutAndReturn = () => {\r\n        return logout().then(() => {\r\n            toast.dark(\"You are now logged out\");\r\n            history.push(\"/login\");\r\n        });\r\n    };\r\n\r\n    // const { item, getItems, searchTerms, roomFilter } = useContext(ItemContext)\r\n\r\n    // const [ShowResults, setShowResults] = React.useState(false)\r\n    // const Results = () => {\r\n    //     if (ShowResults == true && value != \"\") {\r\n    //         return <Button\r\n    //             className=\"ClearFilterButton\"\r\n    //             variant=\"warning\"\r\n    //             onClick={() => { setFiltered(item); setShowResults(false); setValue(\"\") }}\r\n    //             type=\"button\">Remove Filter\r\n    //                 </Button>;\r\n    //     }\r\n    //     else {\r\n    //         return null;\r\n    //     }\r\n    // }\r\n\r\n    const handleSelect = (e) => {\r\n        setValue(e)\r\n    }\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    // useEffect(() => {\r\n    //     getItems()\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     if (searchTerms !== \"\") {\r\n    //         const subset = item.filter(item => item.itemName.toLowerCase().includes(searchTerms.toLowerCase().trim()))\r\n    //         setFiltered(subset)\r\n    //     } else if (value !== \"\") {\r\n    //         const subset2 = item.filter(item => item.itemLocation.includes(value))\r\n    //         setFiltered(subset2)\r\n    //         setShowResults(true)\r\n    //     } else {\r\n    //         setFiltered(item)\r\n    //     }\r\n    // }, [searchTerms, value, item])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/item\")\r\n            .then((res) => res.json())\r\n            .then((items) => {\r\n                setItems(items);\r\n            });\r\n    }, []);\r\n\r\n    const [ShowResults, setShowResults] = React.useState(false)\r\n    const Results = () => {\r\n        if (value != \"\") {\r\n            return <Button\r\n                className=\"ClearFilterButton\"\r\n                id=\"removeFilterButton\"\r\n                onClick={() => { setValue(\"\") }}\r\n                type=\"button\"\r\n                variant=\"warning\"\r\n            >Remove Filter\r\n                </Button>;\r\n        }\r\n        else {\r\n            return <div className=\"ClearFilterButton\" id=\"removeFilterButton\"></div>;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <Navbar bg=\"dark\" variant=\"tabs\">\r\n                    <img alt=\"Nucleus Logo\" className=\"NucleusInventoryLogo\" src=\"\\Images\\NucleusLogo.png\" />\r\n                    <Button\r\n                        className=\"mt-1 ml-5\"\r\n                        id=\"navLinks\"\r\n                        onClick={() => {\r\n                            history.push(`/dashboard`)\r\n                        }}\r\n                        variant=\"outline\"\r\n                    >Dashboard\r\n                    </Button>\r\n                    <Nav className=\"mr-auto\" fixed=\"top\"></Nav>\r\n                    <Button\r\n                        className=\"mt-1 mr-5\"\r\n                        id=\"navLinks\"\r\n                        onClick={() => {\r\n                            history.push(`/editprofile`)\r\n                        }}\r\n                        variant=\"outline\"\r\n                    >Edit Profile\r\n                    </Button>\r\n                    <Button\r\n                        className=\"mt-1 mr-5\"\r\n                        id=\"navLinks\"\r\n                        onClick={logoutAndReturn}\r\n                        variant=\"outline\"\r\n                    >Logout\r\n                    </Button>\r\n                </Navbar>\r\n            </Container>\r\n\r\n            <Row>\r\n                <Button\r\n                    className=\"addItemButton ml-5\"\r\n                    id=\"input\"\r\n                    onClick={() => {\r\n                        history.push(`/additem`)\r\n                    }}\r\n                    type=\"button\"\r\n                    variant=\"success\"\r\n                >Add New Item\r\n                </Button>\r\n                <Col md={4} style={{ marginRight: 60 }}></Col>\r\n                <Row>\r\n                    <Col>\r\n                        <Results />\r\n                    </Col>\r\n                    <Col>\r\n                        <DropdownButton\r\n                            alignRight\r\n                            className=\"mx-5\"\r\n                            id=\"locationFilterDropdown\"\r\n                            onSelect={handleSelect}\r\n                            title={value ? value : \"Filter by Location\"}\r\n                        >\r\n                            <Dropdown.Item eventKey=\"Administrative Services\" id=\"dropdownOptions\">Administrative Services</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Anesthetics\" id=\"dropdownOptions\">Anesthetics</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Billing\" id=\"dropdownOptions\">Billing</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Cardiology\" id=\"dropdownOptions\">Cardiology</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Dermatology\" id=\"dropdownOptions\">Dermatology</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Ear, Nose, and Throat (ENT)\" id=\"dropdownOptions\">Ear, Nose, and Throat (ENT)</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Emergency Department (ED)\" id=\"dropdownOptions\">Emergency Department (ED)</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Gastroenterology\" id=\"dropdownOptions\">Gastroenterology</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Gynecology\" id=\"dropdownOptions\">Gynecology</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Hematology\" id=\"dropdownOptions\">Hematology</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Human Resources (HR)\" id=\"dropdownOptions\">Human Resources (HR)</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Imaging and Radiology\" id=\"dropdownOptions\">Imaging and Radiology</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Information Technology (IT)\" id=\"dropdownOptions\">Information Technology (IT)</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Intensive Care Unit (ICU)\" id=\"dropdownOptions\">Intensive Care Unit (ICU)</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Materials Management\" id=\"dropdownOptions\">Materials Management</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Neonatal\" id=\"dropdownOptions\">Neonatal</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Neurology\" id=\"dropdownOptions\">Neurology</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Nutrition and Dietics\" id=\"dropdownOptions\">Nutrition and Dietics</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Oncology\" id=\"dropdownOptions\">Oncology</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Orthopedics\" id=\"dropdownOptions\">Orthopedics</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Pharmacy\" id=\"dropdownOptions\">Pharmacy</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Physiotherapy\" id=\"dropdownOptions\">Physiotherapy</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Records and Billing\" id=\"dropdownOptions\">Records and Billing</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Surgery\" id=\"dropdownOptions\">Surgery</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Urology\" id=\"dropdownOptions\">Urology</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </Col>\r\n                    <Col>\r\n                        <ItemSearch id=\"itemSearch\" type=\"text\" />\r\n                    </Col>\r\n                </Row>\r\n            </Row>\r\n            <Row>\"\"</Row>\r\n            <Row className=\"justify-content-md-left\">\r\n                <Col id=\"columnHeaders\" md=\"2\">Image</Col>\r\n                <Col id=\"columnHeaders\" md=\"2\">Department</Col>\r\n                <Col id=\"columnHeaders\" md=\"2\">Vendor Name</Col>\r\n                <Col id=\"columnHeaders\" md=\"2\">Item Name</Col>\r\n                <Col id=\"columnHeaders\" md=\"1\">Item SKU</Col>\r\n                <Col id=\"columnHeaders\" md=\"1\">Unit Price</Col>\r\n                <Col id=\"columnHeaders\" md=\"1\">Quantity</Col>\r\n            </Row>\r\n            <hr id=\"hrStyling\" />\r\n            {\r\n                items.map(item => {\r\n                    return <ItemCard key={item.id} item={item} />\r\n                })\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InventoryList;","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\ItemSearch.js",["69","70"],"import React, { useContext, useEffect } from \"react\"\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport \"./Inventory.css\";\r\n\r\nexport const ItemSearch = () => {\r\n    // const { setSearchTerms } = useContext(ItemContext)\r\n\r\n    // useEffect(() => {\r\n    //     setSearchTerms(\"\")\r\n    // }, [setSearchTerms])\r\n\r\n    return (\r\n        <>\r\n            <FormControl type=\"text\"\r\n                // className=\"SearchBar\"\r\n                id=\"itemSearch\"\r\n                // onKeyUp={\r\n                //     (keyEvent) => setSearchTerms(keyEvent.target.value)\r\n                // }\r\n                placeholder=\"Search by Item Name\" />\r\n        </>\r\n    )\r\n}","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\Dashboard.js",["71","72","73"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport { toast } from \"react-toastify\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from \"react-bootstrap/Container\"\r\n\r\nconst Dashboard = () => {\r\n\r\n    const { logout } = useContext(UserProfileContext);\r\n\r\n    const logoutAndReturn = () => {\r\n        return logout().then(() => {\r\n            toast.dark(\"You are now logged out\");\r\n            history.push(\"/login\");\r\n        });\r\n    };\r\n\r\n    const history = useHistory();\r\n    const [value, setValue] = useState('');\r\n\r\n\r\n\r\n\r\n    const handleSelect = (e) => {\r\n        setValue(e)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <Navbar bg=\"dark\" variant=\"tabs\">\r\n                    <img className=\"NucleusInventoryLogo\" src=\"\\Images\\NucleusLogo.png\" alt=\"Nucleus Logo\" />\r\n                    <Button\r\n                        id=\"navLinks\"\r\n                        className=\"mt-1 ml-5\"\r\n                        onClick={() => {\r\n                            history.push(`/`)\r\n                        }}\r\n                        variant=\"outline\"\r\n                    >Inventory</Button>\r\n\r\n\r\n                    <Nav fixed=\"top\" className=\"mr-auto\"></Nav>\r\n                    <Button\r\n                        id=\"navLinks\"\r\n                        className=\"mt-1 mr-5\"\r\n                        variant=\"outline\"\r\n                        onClick={logoutAndReturn}\r\n                    >Logout\r\n                    </Button>\r\n                </Navbar>\r\n            </Container>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\ItemForm.js",["74","75","76","77","78","79","80"],"C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\EditProfile.js",["81","82","83","84","85","86","87","88","89","90"],"import React, { useContext, useEffect, useState, useRef } from \"react\"\r\nimport { useHistory, useParams, Route, withRouter } from \"react-router-dom\"\r\nimport { Button, Col, Form, Dropdown, DropdownButton, Row } from \"react-bootstrap\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./Inventory.css\";\r\n\r\nconst EditProfile = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const firstName = useRef();\r\n    const lastName = useRef();\r\n    const displayName = useRef();\r\n    const email = useRef();\r\n\r\n    const [item, setNewItem] = useState({});\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { profileId } = useParams()\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const addedItem = item\r\n        addedItem[event.target.name] = event.target.value\r\n        setNewItem(addedItem)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     getItems()\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     if (itemId) {\r\n    //         getItemById(itemId)\r\n    //             .then(item => {\r\n    //                 setNewItem(item)\r\n    //             })\r\n    //     } else {\r\n    //     }\r\n    // }, [getItemById, itemId])\r\n\r\n    const showToast1 = () => {\r\n        toast.error(\"First Name is a required field and cannot be blank\")\r\n    };\r\n\r\n    const showToast2 = () => {\r\n        toast.error(\"Last Name is a required field and cannot be blank\")\r\n    };\r\n\r\n    const showToast3 = () => {\r\n        toast.error(\"Display Name is a required field and cannot be blank\")\r\n    };\r\n\r\n    const showToast4 = () => {\r\n        toast.error(\"Email is a required field and cannot be blank\")\r\n    };\r\n\r\n    const constructItemObject = () => {\r\n        // setIsLoading(true)\r\n        if (firstName.current.value === \"\") {\r\n            showToast1();\r\n        }\r\n        else if (lastName.current.value === \"\") {\r\n            showToast2();\r\n        }\r\n        else if (displayName.current.value === \"\") {\r\n            showToast3();\r\n        }\r\n        else if (email.current.value === \"\") {\r\n            showToast4();\r\n        }\r\n        // else {\r\n        //     if (itemId) {\r\n        //         editItems({\r\n        //             id: item.id,\r\n        //             itemName: item.itemName,\r\n        //             itemLocation: itemLocation.current.value,\r\n        //             itemDescription: item.itemDescription,\r\n        //             itemSerialNumber: item.itemSerialNumber,\r\n        //             itemNotes: item.itemNotes\r\n        //         })\r\n        //             .then(() => history.push(\"/\"))\r\n        //     } else {\r\n        //         addItems({\r\n        //             id: item.id,\r\n        //             itemName: item.itemName,\r\n        //             itemLocation: item.itemRoom,\r\n        //             itemDescription: item.itemDescription,\r\n        //             itemSerialNumber: item.itemSerialNumber,\r\n        //             itemNotes: item.itemNotes\r\n        //         })\r\n        //             .then(() => history.push(\"/\"))\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"my-5\">Edit Profile</h1>\r\n            <hr />\r\n            <Row>\r\n                <Col></Col>\r\n                <Col className=\"ml-5\" id=\"textInputs\">\r\n                    <Row className=\"justify-content-md-left my-4\" style={{ marginTop: -15 }}>\r\n                        <label\r\n                            className=\"firstNameTitle text-left\"\r\n                            id=\"input\"\r\n                            style={{ width: 200, height: 5 }}\r\n                        >First Name:\r\n                        </label>\r\n                        <input\r\n                            className=\"firstNameInput mb-4 ml-4\"\r\n                            defaultValue={profileId ? item.firstName : \"\"}\r\n                            id=\"input\"\r\n                            name=\"firstName\"\r\n                            onChange={handleControlledInputChange}\r\n                            ref={firstName}\r\n                            style={{ width: 400, height: 35 }}\r\n                            type=\"text\"\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-md-left mb-4\" style={{ marginTop: -15 }}>\r\n                        <label\r\n                            className=\"lastNameTitle text-left\"\r\n                            id=\"input\"\r\n                            style={{ width: 200, height: 5 }}\r\n                        >Last Name:\r\n                        </label>\r\n                        <input\r\n                            className=\"lastNameInput mb-4 ml-4\"\r\n                            defaultValue={profileId ? item.lastName : \"\"}\r\n                            id=\"input\"\r\n                            name=\"lastName\"\r\n                            onChange={handleControlledInputChange}\r\n                            ref={lastName}\r\n                            style={{ width: 400, height: 35 }}\r\n                            type=\"text\"\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-md-left mb-4\" style={{ marginTop: -15 }}>\r\n                        <label\r\n                            className=\"displayName text-left\"\r\n                            id=\"input\"\r\n                            style={{ width: 200, height: 5 }}\r\n                        >Display Name:\r\n                        </label>\r\n                        <input\r\n                            className=\"displayName mb-4 ml-4\"\r\n                            defaultValue={profileId ? item.displayName : \"\"}\r\n                            id=\"input\"\r\n                            name=\"displayName\"\r\n                            onChange={handleControlledInputChange}\r\n                            ref={displayName}\r\n                            style={{ width: 400, height: 35 }}\r\n                            type=\"text\"\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-md-left mb-4\" style={{ marginTop: -15 }}>\r\n                        <label\r\n                            className=\"email text-left\"\r\n                            id=\"input\"\r\n                            style={{ width: 197, height: 5 }}\r\n                        >Email:\r\n                        </label>\r\n                        <input\r\n                            className=\"email mb-4 ml-4\"\r\n                            defaultValue={profileId ? item.email : \"\"}\r\n                            id=\"input\"\r\n                            name=\"email\"\r\n                            onChange={handleControlledInputChange}\r\n                            ref={email}\r\n                            style={{ width: 400, height: 35 }}\r\n                            type=\"text\"\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-md-left mb-4\" style={{ marginTop: 20 }}>\r\n                        <Button\r\n                            id=\"input\"\r\n                            onClick={item => {\r\n                                item.preventDefault()\r\n                                // constructItemObject()\r\n                                // history.push(`/`)\r\n                            }}\r\n                            style={{ width: 150, marginLeft: 75 }}\r\n                            type=\"button\"\r\n                            variant=\"success\"\r\n                        >Save Edits\r\n                        </Button>\r\n\r\n                        <Button\r\n                            id=\"input\"\r\n                            onClick={() => {\r\n                                history.push(`/`)\r\n                            }}\r\n                            style={{ width: 150, marginLeft: 150 }}\r\n                            type=\"submit\"\r\n                            variant=\"danger\"\r\n                        >Cancel\r\n                        </Button>\r\n\r\n                        {/* <Button\r\n                                className=\"CancelAddItem\"\r\n                                onClick={showToast}\r\n                                style={{ width: 150, marginLeft: 30 }}\r\n                                type=\"submit\"\r\n                                variant=\"danger\"\r\n                            >Toast\r\n                            </Button> */}\r\n\r\n                        <ToastContainer\r\n                            autoClose={2000}\r\n                            closeOnClick\r\n                            draggable\r\n                            hideProgressBar={false}\r\n                            newestOnTop={false}\r\n                            pauseOnFocusLoss\r\n                            pauseOnHover\r\n                            position=\"top-center\"\r\n                            rtl={false}\r\n                        />\r\n                    </Row>\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditProfile;","C:\\Users\\braxt\\workspace\\Capstone-Nucleus\\Capstone-Nucleus\\Capstone-Nucleus\\client\\src\\pages\\ItemCard.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":7,"column":60,"nodeType":"97","messageId":"98","endLine":7,"endColumn":64},{"ruleId":"95","severity":1,"message":"99","line":16,"column":12,"nodeType":"97","messageId":"98","endLine":16,"endColumn":25},{"ruleId":"95","severity":1,"message":"100","line":16,"column":27,"nodeType":"97","messageId":"98","endLine":16,"endColumn":38},{"ruleId":"95","severity":1,"message":"101","line":47,"column":12,"nodeType":"97","messageId":"98","endLine":47,"endColumn":24},{"ruleId":"95","severity":1,"message":"102","line":49,"column":11,"nodeType":"97","messageId":"98","endLine":49,"endColumn":17},{"ruleId":"95","severity":1,"message":"103","line":79,"column":12,"nodeType":"97","messageId":"98","endLine":79,"endColumn":23},{"ruleId":"95","severity":1,"message":"104","line":79,"column":25,"nodeType":"97","messageId":"98","endLine":79,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":81,"column":19,"nodeType":"107","messageId":"108","endLine":81,"endColumn":21},{"ruleId":"95","severity":1,"message":"109","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":27},{"ruleId":"95","severity":1,"message":"110","line":1,"column":29,"nodeType":"97","messageId":"98","endLine":1,"endColumn":38},{"ruleId":"95","severity":1,"message":"110","line":1,"column":29,"nodeType":"97","messageId":"98","endLine":1,"endColumn":38},{"ruleId":"95","severity":1,"message":"111","line":24,"column":12,"nodeType":"97","messageId":"98","endLine":24,"endColumn":17},{"ruleId":"95","severity":1,"message":"112","line":29,"column":11,"nodeType":"97","messageId":"98","endLine":29,"endColumn":23},{"ruleId":"95","severity":1,"message":"109","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":27},{"ruleId":"95","severity":1,"message":"110","line":1,"column":29,"nodeType":"97","messageId":"98","endLine":1,"endColumn":38},{"ruleId":"95","severity":1,"message":"113","line":2,"column":33,"nodeType":"97","messageId":"98","endLine":2,"endColumn":38},{"ruleId":"95","severity":1,"message":"114","line":2,"column":40,"nodeType":"97","messageId":"98","endLine":2,"endColumn":50},{"ruleId":"95","severity":1,"message":"115","line":89,"column":11,"nodeType":"97","messageId":"98","endLine":89,"endColumn":30},{"ruleId":"116","severity":1,"message":"117","line":155,"column":41,"nodeType":"118","endLine":155,"endColumn":114},{"ruleId":"116","severity":1,"message":"117","line":157,"column":41,"nodeType":"118","endLine":161,"endColumn":43},{"ruleId":"95","severity":1,"message":"109","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":27},{"ruleId":"95","severity":1,"message":"110","line":1,"column":29,"nodeType":"97","messageId":"98","endLine":1,"endColumn":38},{"ruleId":"95","severity":1,"message":"113","line":2,"column":33,"nodeType":"97","messageId":"98","endLine":2,"endColumn":38},{"ruleId":"95","severity":1,"message":"114","line":2,"column":40,"nodeType":"97","messageId":"98","endLine":2,"endColumn":50},{"ruleId":"95","severity":1,"message":"96","line":3,"column":23,"nodeType":"97","messageId":"98","endLine":3,"endColumn":27},{"ruleId":"95","severity":1,"message":"119","line":3,"column":29,"nodeType":"97","messageId":"98","endLine":3,"endColumn":37},{"ruleId":"95","severity":1,"message":"120","line":3,"column":39,"nodeType":"97","messageId":"98","endLine":3,"endColumn":53},{"ruleId":"95","severity":1,"message":"121","line":18,"column":12,"nodeType":"97","messageId":"98","endLine":18,"endColumn":19},{"ruleId":"95","severity":1,"message":"122","line":18,"column":21,"nodeType":"97","messageId":"98","endLine":18,"endColumn":31},{"ruleId":"95","severity":1,"message":"115","line":58,"column":11,"nodeType":"97","messageId":"98","endLine":58,"endColumn":30},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'filteredItems' is assigned a value but never used.","'setFiltered' is assigned a value but never used.","'dropdownOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'ShowResults' is assigned a value but never used.","'setShowResults' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'useEffect' is defined but never used.","'value' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","'Route' is defined but never used.","'withRouter' is defined but never used.","'constructItemObject' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]